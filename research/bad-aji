#!/bin/bash

. $HOME/automafield/script.sh

while getopts ":l:i:h" opt; do
  case $opt in
      l)
	  l="LIMIT $OPTARG"
	  ;;
      i)
	  inst="$OPTARG"
	  ;;
      h)
	  echo "$0 [-l limit]"
	  exit 1
      ;;
  esac
done

export PAGER=cat
for ct in 1 2 3
do
        i=`pct_all_instances $ct | grep HQ`
        if [ -n "$inst" -a "$i" != "$inst" ]; then
    	    continue
        fi
	
	echo "AJI/JI mismatch in functional currency on instance $i"
	# subtle: we are looking only at the REV and FXA journals to spot differences
	# thus the "account_journal_type in ()".
	#
	# A difference that we will see below in booking currency, we would see here as well, so
	# don't show them.
	#
	# Functional currency differences are less interesting because it is
	# a derived value. See US-171.
	pct $ct $i -c "
SELECT
  account_period.name,
  account_move.name,
  avg(account_move_line.credit-account_move_line.debit) JI,
  sum(account_analytic_line.amount) AJI,
  abs(avg(account_move_line.credit-account_move_line.debit) - sum(account_analytic_line.amount)) difference
FROM 
  account_move,
  account_move_line,
  account_account,
  account_analytic_line,
  account_journal,
  account_period
WHERE
  account_analytic_line.move_id = account_move_line.id and
  account_move_line.move_id = account_move.id AND
  account_move_line.account_id = account_account.id AND
  account_journal.id = account_move.journal_id AND
  account_move.period_id = account_period.id AND
  account_journal.type in ('revaluation', 'cur_adj') AND
  account_account.code in (
    SELECT 
      account_account.code 
    FROM 
      account_account, 
      account_account_type
    WHERE 
      account_account.user_type = account_account_type.id and
      account_account_type.code in ('income', 'expense')
  )
  GROUP BY account_period.name, account_move.name, account_move_line.id
  HAVING abs(avg(account_move_line.credit-account_move_line.debit) - sum(account_analytic_line.amount)) > 0.00001
  order by difference desc, account_move.name $l;"

	echo "AJI/JI mismatch in booking currency on instance $i"
	# account_journal.type NOT IN because we are filtering out transactions that
	# are by definition unbalanced, for example the currency rate changes and so
	# you get "more" money in an account out of nowhere.
	pct $ct $i -c "
SELECT 
  account_period.name,
  account_move.name,
  avg(account_move_line.debit_currency-account_move_line.credit_currency) JI,
  sum(account_analytic_line.amount_currency) AJI,
  abs(abs(avg(account_move_line.debit_currency-account_move_line.credit_currency)) - abs(sum(account_analytic_line.amount_currency))) difference
FROM 
  account_move,
  account_move_line,
  account_account,
  account_analytic_line,
  account_journal,
  account_period
WHERE
  account_analytic_line.move_id = account_move_line.id and
  account_move_line.move_id = account_move.id AND
  account_move_line.account_id = account_account.id AND
  account_journal.id = account_move.journal_id AND
  account_move.period_id = account_period.id AND
  account_journal.type not in ('system', 'revaluation', 'cur_adj') AND
  account_account.code in (
    SELECT 
      account_account.code 
    FROM 
      account_account, 
      account_account_type
    WHERE 
      account_account.user_type = account_account_type.id and
      account_account_type.code in ('income', 'expense')
  ) and
  account_move.name not like 'SS125%'
  GROUP BY account_period.name, account_move.name, account_move_line.id
  HAVING abs(abs(avg(account_move_line.debit_currency-account_move_line.credit_currency)) - abs(sum(account_analytic_line.amount_currency))) > 0.00001
  ORDER BY difference desc, account_move.name $l;"
done
