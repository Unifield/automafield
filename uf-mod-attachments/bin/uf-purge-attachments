#!/usr/bin/env python

import sys, os, argparse, base64, psycopg2, StringIO

def main():
    parser = argparse.ArgumentParser(prog='ufload')
    parser.add_argument("-db-host", help="Postgres host")
    parser.add_argument("-db-port", help="Postgres port")
    parser.add_argument("-db-user", help="Postgres user")
    args = parser.parse_args()
        
    if 'PGPASSWORD' not in os.environ:
        print "Set the PGPASSWORD environment variable."
        sys.exit(1)
    
    conn = psycopg2.connect(database=args.db_name,
                            user=args.db_user,
                            host="localhost")

    cur = conn.cursor()
    cur.execute("select id from ir_attachment")
    for record in cur:
        ids.append(record[0])
    cur.close()
    
    # Use a named cursor to minimize the data sent in reply to the
    # exec. Using a server-side cursor emans we stream the datas as
    # we write them to disk.
    cur = conn.cursor('datas')
    cur.execute("select id, datas from ir_attachment where id in (%s)",
                ids)
    for record in cur:
        # Put 100 files at a time into each directory.
        d = "%d"%(record[0]/100)
        if not os.path.exist(d):
            os.mkdir(d)

        with open(os.path.join(d, "%d.bin"%record[0]), "wb") as f:
            out = psycopg2.BINARY(str(record[1]), cur)
            base64.decode(StringIO.StringIO(out), f)
    cur.close()
    
main()
